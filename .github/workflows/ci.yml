name: CI Pipeline

on: [push]

env:
  ASSETS_BASE_URL: ${{ secrets.ASSETS_BASE_URL }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: |
            ./node_modules
            ./packages/client/node_modules
            ./services/renderer/node_modules
          key: ${{ runner.OS }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-

      - name: Install Dependencies
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: yarn install

      - name: Compile
        run: yarn build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: compiled-artifacts
          if-no-files-found: error
          path: |
            packages/client/dist

  lint:
    name: Lint
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: |
            ./node_modules
            ./packages/client/node_modules
            ./services/renderer/node_modules
          key: ${{ runner.OS }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-

      - name: Download compiled artifacts
        uses: actions/download-artifact@v4
        with:
          name: compiled-artifacts

      - name: Lint
        run: yarn lint

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: |
            ./node_modules
            ./packages/client/node_modules
            ./services/renderer/node_modules
          key: ${{ runner.OS }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-

      - name: Download compiled artifacts
        uses: actions/download-artifact@v4
        with:
          name: compiled-artifacts

      - name: Test
        run: yarn test

      - name: Coverage
        run: yarn coverage

  docs:
    name: Documentation
    needs: [build, lint, test]
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: |
            ./node_modules
            ./packages/client/node_modules
            ./services/renderer/node_modules
          key: ${{ runner.OS }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-

      - name: Install Dependencies
        run: yarn install

      - name: Generate Documentation
        run: |
          yarn run docs

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Archive Documentation
        uses: actions/upload-artifact@v4
        with:
          name: exomoon-erc721-layered-assets-client-documentation-${{ steps.extract_branch.outputs.branch }}
          path: ./packages/client/docs
